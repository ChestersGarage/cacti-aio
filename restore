#!/bin/bash -x

# Check for whether a backup file was specified
if [[ $1 ]]
then
	RESTOREFILE=$1
	if [[ -f /var/backups/${RESTOREFILE} ]]
	then
		# Clean up first
		rm -f /tmp/mysql-data.sql /tmp/mysql-conf.tgz /tmp/cacti-data.tgz /tmp/apache-conf.tgz /tmp/php-conf.tgz

		# Unpack the dated backup
		tar -zxvf /var/backups/${RESTOREFILE} -C /tmp
	else
		echo "Backup ${RESTOREFILE} could not be found."
		echo "Please make sure it exists in /var/backups."
		exit 1
	fi
else
	echo "No restore file name provided."
	exit 1
fi

# MySQL data
if [[ -f /tmp/mysql-data.sql ]]
then
	mysql -uroot -p${MYSQL} < /tmp/mysql-data.sql
fi

# MySQL configs
if [[ -f /tmp/mysql-conf.tgz ]]
then
	rm -rf /etc/mysql/*
	tar -zxvf /tmp/mysql-conf.tgz -C /etc/mysql/
fi

# Cacti data
if [[ -f /tmp/cacti-data.tgz ]]
then
	rm -rf /var/lib/cacti/rra/*
	tar -zxvf /tmp/cacti-data.tgz -C /var/lib/cacti/rra/
fi

# Apache configs
if [[ -f /tmp/apache-conf.tgz ]]
then
	rm -rf /etc/apache2/*
	tar -zxvf /tmp/apache-conf.tgz -C /etc/apache2/
fi

# PHP configs
if [[ -f /tmp/php-conf.tgz ]]
then
	rm -rf /etc/php7/*
	tar -zxvf /tmp/php-conf.tgz -C /etc/php7/
fi

chown -R cacti:cacti /usr/share/webapps/cacti/
chown -R cacti:cacti /var/lib/cacti/
chown -R apache:apache /usr/share/webapps/cacti/cache/
chown -R apache:apache /usr/share/webapps/cacti/resource/
chown -R apache:apache /usr/share/webapps/cacti/scripts/
chown -R apache:apache /var/log/cacti/

# Reload/restart to make sure things are clean
mysqladmin -uroot -p${MYSQL} shutdown
sleep 1
nohup /usr/bin/mysqld_safe --datadir="/var/lib/mysql" &
sleep 3

# Clear out old user tables entries
echo "DELETE FROM mysql.user WHERE User = 'cactiuser';" | mysql -uroot -p${MYSQL}
echo "DELETE FROM mysql.user WHERE User = 'backups';" | mysql -uroot -p${MYSQL}

# Create a user for running backups
echo "GRANT LOCK TABLES, SELECT ON *.* TO 'backups'@'${CONTAINERFQDN}' IDENTIFIED BY '${BACKUPS}';" | mysql -uroot -p${MYSQL}
echo "GRANT LOCK TABLES, SELECT ON *.* TO 'backups'@'localhost' IDENTIFIED BY '${BACKUPS}';" | mysql -uroot -p${MYSQL}

# Create the cacti user
echo "GRANT ALL ON cacti.* TO 'cactiuser'@'${CONTAINERFQDN}' IDENTIFIED BY '${CACTI}';" | mysql -uroot -p${MYSQL}
echo "GRANT ALL ON cacti.* TO 'cactiuser'@'localhost' IDENTIFIED BY '${CACTI}';" | mysql -uroot -p${MYSQL}

echo "GRANT SELECT ON mysql.time_zone_name TO 'cactiuser'@'${CONTAINERFQDN}' IDENTIFIED BY '${CACTI}';" | mysql -uroot -p${MYSQL}
echo "GRANT SELECT ON mysql.time_zone_name TO 'cactiuser'@'localhost' IDENTIFIED BY '${CACTI}';" | mysql -uroot -p${MYSQL}

# Avoid unix sockets based access
echo "UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE User = 'cactiuser';" | mysql -uroot -p${MYSQL}
echo "UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE User = 'backups';" | mysql -uroot -p${MYSQL}
echo "UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE User = 'root';" | mysql -uroot -p${MYSQL}
echo "flush privileges;" | mysql -uroot -p${MYSQL}

# Bounce Apache too
/usr/sbin/httpd -k restart -f /etc/apache2/httpd.conf
